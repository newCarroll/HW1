При запуске скрипта создается объект класса Interpreter, который обрабатывает по одной входные строки.

При получении новой строки Interpreter разделяет ее на части пайплайна ( все, что между "|"),  и кажд- 
ую из частей разделяет на токены, где токен - это текст в кавычках, двойных кавычках или без кавычек.
Например echo " wc 123" '23' станут тремя токенами - echo, wc 123, 23. Также в классе Token запоминае-
тся наличие кавычек и их тип, если они были.


Затем полученные списки токенов передаются в PipeParser, объект данного класса хранится в Interpreter.
PipeParser в свою очередь хранит объект VariablesParser, который содержит словарь - имя переменной:зна-
чение. PipeParser анализирует часть пайпа на наличие "$" и "=" и в зависимости от этого передает 
VariablesParser переменную и значение, или передает токен для подстановки перменных. Таким образом 
VariablesParser возвращает текст с подставленными значениями переменных либо запомнит переменную и ее
значение .

PipeParser также содержит список всех доступных комманд. После постановки всех переменных в часть пайпа,
PipeParser анализирует первое слово и в зависимости есть ли это слово в списке комманд создает класс для 
имеющейся комманды или создает класс ShellProcess. Затем комманда выполняется с помощью имеющегося у всех
этих классов метода execute(). Данный метод принимает на вход кроме аргументов еще и входной поток, и воз-
вращает поток. PipeParser после выполенения комманды первой части пайплайна, выполняет вторую часть, пере-
давая соответствующей команды выходной поток предыдущей.

На каждом этапе могут возникуть ошибки, например, нераспознанной комманды, PipeParser ловит их и выводит 
пользователю сообщение о ней, при этом работа Interpretera не нарушается. После успешного выполнения всех 
частей пайплайна результат передается к Interpreter.
